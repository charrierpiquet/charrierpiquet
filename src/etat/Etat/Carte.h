// Generated by dia2code
#ifndef ETAT__CARTE__H
#define ETAT__CARTE__H


namespace Etat {
  class Cout;
  class Objet;
  class Capacite;
}

#include "Cout.h"
#include "Objet.h"
#include "Capacite.h"

namespace Etat {

  /// class Carte - 
  class Carte : public Etat::Objet {
    // Associations
    // Attributes
  protected:
    bool isPermanent;
    bool isLand;
    bool isTap;
    bool isCreature;
    bool isToken;
    std::string name;
    Cout cost;
    int counters;
    Capacite ability;
    // Operations
  public:
    std::string GetName ();
    Cout GetCost ();
    void SetIsTap(bool value);
    int GetCounter ();
    void SetCounter (int value);
    bool GetIsLand ();
    bool GetIsPermanent ();
    bool GetIsCreature ();
    bool GetIsToken ();
    bool GetIsTap();
    Carte(bool permanent,bool land,bool creature,bool token, std::string nom,
           Cout cout, Capacite capa);
    ~Carte ();
    // Setters and Getters
//    bool getIsPermanent() const;
//    void setIsPermanent(bool isPermanent);
//    bool getIsLand() const;
//    void setIsLand(bool isLand);
//    bool getIsTap() const;
//    void setIsTap(bool isTap);
//    bool getIsCreature() const;
//    void setIsCreature(bool isCreature);
//    bool getIsToken() const;
//    void setIsToken(bool isToken);
//    const string& getName() const;
//    void setName(const string& name);
//    const Cout& getCost() const;
//    void setCost(const Cout& cost);
//    int getCounters() const;
//    void setCounters(int counters);
//    const capacites& getAbility() const;
//    void setAbility(const capacites& ability);
  };

};

#endif
