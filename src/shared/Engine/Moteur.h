// Generated by dia2code
#ifndef ENGINE__MOTEUR__H
#define ENGINE__MOTEUR__H

#include <memory>
#include <vector>
#include <json/json.h>

namespace Etat {
  class State;
};
namespace Engine {
  class Command;
}

#include "Etat/State.h"
#include "Command.h"

namespace Engine {

  /// class Moteur - 
  class Moteur {
    // Associations
    // Attributes
  private:
    std::shared_ptr<Etat::State> currentState;
    std::vector<std::shared_ptr<Command> > commands;
    std::vector<std::shared_ptr<Command> > historic;
    bool record     = false;
    Json::Value val;
    bool network     = false;
    // Operations
  public:
    Moteur (std::shared_ptr<Etat::State> state, bool record = false, bool network = false);
    void AddCommand (std::shared_ptr<Command> cmd);
    void Update ();
    void RollBack ();
    int HistoricSize ();
    void SetRecord (bool value);
    std::shared_ptr<Etat::State> GetState ();
    Json::Value GetCommand (int ind);
    ~Moteur ();
    void ReadCommand (Json::Value val);
    Moteur ();
    // Setters and Getters
  };

};

#endif
