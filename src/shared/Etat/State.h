// Generated by dia2code
#ifndef ETAT__STATE__H
#define ETAT__STATE__H

#include <vector>
#include <memory>

namespace Etat {
  class Joueur;
  class Objet;
  class Carte;
}

#include "Joueur.h"
#include "Objet.h"
#include "Carte.h"

namespace Etat {

  /// class State - 
  class State {
    // Associations
    // Attributes
  private:
    int joueur;
    int phase;
    std::vector<std::shared_ptr<Joueur> > joueurs;
    int priorite;
    std::vector<std::shared_ptr<Objet> > pile;
    std::vector<std::shared_ptr<Carte> > battlefield;
    int nbJoueur;
    // Operations
  public:
    State (int nb = 2);
    void IncrPriority ();
    void IncrPhase ();
    std::shared_ptr<Joueur>  JoueurActif ();
    void AddCardPile (Objet card);
    void AddCardBattlefield (Carte card);
    int GetNbJoueur () const;
    std::shared_ptr<Joueur>  GetJoueur (int i) const;
    void DelCardBattlefield (Carte card);
    void DelCardPile (Objet card);
    std::shared_ptr<Objet>  GetTopPile () const;
    std::vector<std::shared_ptr<Carte> > GetBattlefield () const;
    int GetPhase () const;
    bool GetPileEmpty () const;
    // Setters and Getters
  };

};

#endif
